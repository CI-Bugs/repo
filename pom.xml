<!--

Default build:
  - [generate-sources]
    Compiling code generators javaslang/generator/*.java
    Running code generators, output in target/generated-sources
  - ...

Profile 'ci':
  Used by travis-ci.org in integration builds when reporting code coverage report to coveralls.io.

Profile 'release-sign-artifacts':
  Used by sonatype to sign artifacts when releasing javaslang to maven central.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<prerequisites>
		<maven>3.0.0</maven>
	</prerequisites>
	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>9</version>
	</parent>
	<groupId>com.javaslang</groupId>
	<artifactId>javaslang</artifactId>
	<version>1.1.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>Javaslang</name>
	<description>Javaslang is a Java standard library extension built for Java 8 and above.</description>
	<url>http://javaslang.com</url>
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<scm>
		<connection>scm:git:git@github.com:rocketscience-projects/javaslang.git</connection>
		<developerConnection>scm:git:git@github.com:rocketscience-projects/javaslang.git</developerConnection>
		<url>git@github.com:rocketscience-projects/javaslang.git</url>
		<tag>HEAD</tag>
	</scm>
	<developers>
		<developer>
			<id>danieldietrich</id>
			<name>Daniel Dietrich</name>
			<email>cafebab3@gmail.com</email>
		</developer>
	</developers>
	<properties>
		<assertj.core.version>1.7.0</assertj.core.version>
		<eclipse.lifecycle.mapping.version>1.0.0</eclipse.lifecycle.mapping.version>
		<java.version>1.8</java.version>
		<generator.dir>javaslang/generator</generator.dir>
		<generator.files>${generator.dir}/**/*</generator.files>
		<generated-sources.dir>${project.build.directory}/generated-sources</generated-sources.dir>
		<junit.version>4.12-beta-3</junit.version>
		<maven.build-helper.version>1.9.1</maven.build-helper.version>
		<maven.compiler.version>3.2</maven.compiler.version>
		<maven.coveralls.version>3.0.1</maven.coveralls.version>
		<maven.exec.version>1.3.2</maven.exec.version>
		<maven.gpg.version>1.5</maven.gpg.version>
		<maven.jacoco.version>0.7.2.201409121644</maven.jacoco.version>
		<maven.jar.version>2.5</maven.jar.version>
		<maven.release.version>2.5.1</maven.release.version>
		<maven.versions.version>2.1</maven.versions.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>${maven.build-helper.version}</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals><goal>add-source</goal></goals>
						<configuration>
							<sources>
								<source>src/gen/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
					<!--
					<compilerArgs>
						<arg>-Xlint</arg>
					</compilerArgs>
					-->
				</configuration>
				<executions>
					<execution>
						<id>gen-compile</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<includes>
								<include>${generator.files}</include>
							</includes>
						</configuration>
					</execution>
					<execution>
						<id>default-compile</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<excludes>
								<exclude>${generator.files}</exclude>
							</excludes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>${maven.exec.version}</version>
				<executions>
					<execution>
						<id>exec-generator</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<mainClass>javaslang.generator.GeneratorRunner</mainClass>
							<arguments>
								<argument>-target=${generated-sources.dir}</argument>
								<argument>-generator=javaslang.generator.LambdaGenerator</argument>
								<argument>-generator=javaslang.generator.PropGenerator</argument>
								<argument>-generator=javaslang.generator.TupleGenerator</argument>
							</arguments>
							<sourceRoot>${generated-sources.dir}</sourceRoot>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven.jar.version}</version>
				<executions>
					<execution>
						<id>default-jar</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<excludes>
								<exclude>${generator.dir}/**</exclude>
							</excludes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>${maven.versions.version}</version>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${maven.release.version}</version>
					<configuration>
						<!-- Circumvent maven-gpg-plugin bug -->
						<mavenExecutorId>forked-path</mavenExecutorId>
						<useReleaseProfile>false</useReleaseProfile>
						<!-- Honor arguments passed via command line -->
						<arguments>${arguments} -Psonatype-oss-release</arguments>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>${eclipse.lifecycle.mapping.version}</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<!-- Elimate the eclipse warning 'maven-enforcer-plugin (goal "enforce") 
									is ignored by m2e' -->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-enforcer-plugin</artifactId>
										<versionRange>[0,)</versionRange>
										<goals>
											<goal>enforce</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj.core.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<profiles>
		<!-- A profile for code coverage analysis in ci environments -->
		<profile>
			<id>ci</id>
			<activation>
				<property>
					<name>env.CI</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${maven.jacoco.version}</version>
						<executions>
							<execution>
								<id>prepare-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.eluder.coveralls</groupId>
						<artifactId>coveralls-maven-plugin</artifactId>
						<version>${maven.coveralls.version}</version>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- A profile for gpg-signing .jars when releasing -->
		<profile>
			<id>release-sign-artifacts</id>
			<activation>
				<property>
					<!-- Automatically set to true on mvn release:perform -->
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>${maven.gpg.version}</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
