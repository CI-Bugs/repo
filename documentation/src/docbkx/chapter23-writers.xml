<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.oasis-open.org/docbook/4.5" id="writers"
	xsi:schemaLocation="http://www.oasis-open.org/docbook/4.5 http://www.oasis-open.org/docbook/xsd/4.5/docbook.xsd">

	<title>Writers</title>
	<chapterinfo>
		<abstract>
			<para>Although the primary focus of DataCleaner is analysis, often
				during such analysis you will find yourself actually improving data
				by
				means of applying transformers and filters on it. When this is the
				case, obviously you will want to export the improved/cleansed data so
				you can utilize it in other situations than the analysis.
			</para>
			<para>
				Writing cleansed data is archieved by wiring the job together
				with an
				<emphasis>output writer</emphasis>
				instead of (or in addition to) an analyzer. Adding an output writer
				is
				done by selecting it from the "Write data" menu item.
				Alternatively by
				clicking either your filter's outcome buttons or
				your transformer's
				"Save transformed data" button. When writing data
				there's a couple of
				available output formats:
			</para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="write_cleansed_data_options.jpg"
						format="JPG" scalefit="1" />
				</imageobject>
			</mediaobject>
			<para>In the following sections each output format option will be
				described:
			</para>
		</abstract>
	</chapterinfo>
	
	<section id="writers_create_csv">
		<title>Create CSV file</title>
		<para>Writes a data set to an Comma Separated Values file.
			CSV files
			are
			a popular choise for interoperability with other
			systems and
			loading
			of data into databases.
		</para>
	</section>
	<section id="writers_create_excel">
		<title>Create Excel spreadsheet</title>
		<para>Writes a data set to an Excel spreadsheet.
			An advantage of this
			approach is that a single file can contain
			multiple sheets, and that
			it is easily navigatable in Microsoft
			Excel. A disadvantage is that
			for very large data sets it is less
			performant.
		</para>
	</section>
	<section id="writers_create_staging">
		<title>Create staging table</title>
		<para>Writes a data set to an embedded relational database, which
			DataCleaner manages. This option is primarily used for staging data
			for further analysis. The advantage of using the feature is that it
			retains column type information, it can handle a lot of data and
			multiple data sets can be written to the same datastore. A
			disadvantage is that the data is not easily readable by third party
			applications (unless exported again).
		</para>
	</section>
	<section id="writers_insert_into_table">
		<title>Insert into table</title>
		<para>Using this writer you can insert your data into a table of an
			existing datastore. If you already have a table layout ready or if
			you want to append to eg. a database table, then this writing
			option
			is the right one for you.
		</para>
		<para>
			Optionally, you can make the 'Insert into table' component truncate
			your table before insertion. This will delete all existing records in
			the table, useful for
			<emphasis>initial load</emphasis>
			situations.
		</para>
		<mediaobject>
			<imageobject>
				<imagedata fileref="writers_reference_insert_into_table.jpg"
					format="jpg" scalefit="1" />
			</imageobject>
		</mediaobject>
		<para>
			Currently target tables can be from any of the following
			datastore types:
		</para>
		<orderedlist>
			<listitem>
				<para>
					<emphasis>CSV file</emphasis>
					. In this case data will be appended to the file.
				</para>
			</listitem>
			<listitem>
				<para>
					<emphasis>Excel spreadsheet</emphasis>
					. In this case data will be appended to the file.
				</para>
			</listitem>
			<listitem>
				<para>
					<emphasis>Relational database</emphasis>
					. In this case data will be inserted to the table using an INSERT
					statement.
				</para>
			</listitem>
			<listitem>
				<para>
					<emphasis>MongoDB database</emphasis>
					. In this case data will be inserted into the MongoDB collection.
				</para>
			</listitem>
			<listitem>
				<para>
					<emphasis>CouchDB database</emphasis>
					. In this case data will be inserted into the CouchDB database.
				</para>
			</listitem>
		</orderedlist>
	</section>
</chapter>
